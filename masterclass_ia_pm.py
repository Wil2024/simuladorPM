iimport streamlit as st
import time

# --- Funciones de Simulaci√≥n de IA ---
# Estas funciones simulan lo que har√≠a un modelo de IA real.

def simular_analisis_riesgos(descripcion):
    """Simula la identificaci√≥n de riesgos a partir de una descripci√≥n."""
    riesgos = {
        "riesgos_tecnicos": [
            "Integraci√≥n fallida con sistemas heredados.",
            "Vulnerabilidades de seguridad no detectadas en la nueva plataforma.",
            "Rendimiento inferior al esperado bajo carga m√°xima."
        ],
        "riesgos_operacionales": [
            "Resistencia al cambio por parte de los usuarios finales.",
            "Capacitaci√≥n insuficiente del personal.",
            "Retraso en la entrega de componentes por parte de proveedores clave."
        ],
        "riesgos_financieros": [
            "Sobrecostos debido a estimaciones de tiempo optimistas.",
            "Recorte de presupuesto a mitad del proyecto.",
            "Costos de licencia de software no contemplados."
        ]
    }
    # L√≥gica simple para personalizar la respuesta
    if "migraci√≥n" in descripcion.lower():
        riesgos["riesgos_tecnicos"].append("P√©rdida o corrupci√≥n de datos durante el proceso de migraci√≥n.")
    if "app m√≥vil" in descripcion.lower():
        riesgos["riesgos_tecnicos"].append("Problemas de compatibilidad con diferentes versiones de iOS/Android.")
    if "marketing" in descripcion.lower():
        riesgos["riesgos_operacionales"].append("Bajo engagement o recepci√≥n negativa de la campa√±a.")

    return riesgos

def simular_generacion_wbs(descripcion):
    """Simula la creaci√≥n de una WBS/EDT."""
    wbs = "### Estructura de Desglose del Trabajo (WBS/EDT)\n\n"
    wbs += "1.  **Gesti√≥n del Proyecto**\n"
    wbs += "    1.1. Planificaci√≥n y Dise√±o\n"
    wbs += "    1.2. Seguimiento y Control\n"
    wbs += "    1.3. Gesti√≥n de Riesgos\n"
    wbs += "    1.4. Cierre del Proyecto\n"
    wbs += "2.  **Fase de An√°lisis y Dise√±o**\n"
    wbs += "    2.1. Levantamiento de Requisitos\n"
    wbs += "    2.2. Dise√±o de la Arquitectura\n"
    wbs += "    2.3. Dise√±o de UI/UX\n"
    # L√≥gica simple para personalizar la respuesta
    if "app m√≥vil" in descripcion.lower():
        wbs += "3.  **Fase de Desarrollo (App M√≥vil)**\n"
        wbs += "    3.1. Desarrollo del Backend y APIs\n"
        wbs += "    3.2. Desarrollo del Frontend iOS\n"
        wbs += "    3.3. Desarrollo del Frontend Android\n"
        wbs += "4.  **Fase de Pruebas y QA**\n"
        wbs += "    4.1. Pruebas Unitarias\n"
        wbs += "    4.2. Pruebas de Integraci√≥n\n"
        wbs += "    4.3. Pruebas de Aceptaci√≥n de Usuario (UAT)\n"
    elif "migraci√≥n" in descripcion.lower():
        wbs += "3.  **Fase de Ejecuci√≥n (Migraci√≥n)**\n"
        wbs += "    3.1. Preparaci√≥n del Entorno de Destino\n"
        wbs += "    3.2. Desarrollo de Scripts de Migraci√≥n\n"
        wbs += "    3.3. Ejecuci√≥n de Migraci√≥n en Entorno de Pruebas\n"
        wbs += "    3.4. Ejecuci√≥n de Migraci√≥n en Producci√≥n\n"
        wbs += "4.  **Fase de Verificaci√≥n Post-Migraci√≥n**\n"
        wbs += "    4.1. Validaci√≥n de Integridad de Datos\n"
        wbs += "    4.2. Pruebas de Rendimiento del Nuevo Sistema\n"
    else:
        wbs += "3.  **Fase de Ejecuci√≥n/Implementaci√≥n**\n"
        wbs += "4.  **Fase de Pruebas y Despliegue**\n"

    wbs += "5.  **Fase de Despliegue y Puesta en Marcha**\n"
    wbs += "    5.1. Capacitaci√≥n a Usuarios\n"
    wbs += "    5.2. Puesta en Producci√≥n (Go-Live)\n"
    return wbs

def simular_asistente_comunicacion(descripcion, estado, audiencia):
    """Simula la redacci√≥n de un email de estado."""
    
    proyecto_nombre = "el proyecto"
    if "app m√≥vil" in descripcion.lower():
        proyecto_nombre = "el proyecto de la App M√≥vil"
    elif "migraci√≥n" in descripcion.lower():
        proyecto_nombre = "el proyecto de Migraci√≥n de Datos"

    if estado == "A tiempo ‚úÖ":
        linea_estado = f"Me complace informar que {proyecto_nombre} avanza seg√∫n lo planificado y estamos cumpliendo con los hitos clave."
        proximos_pasos = "Nuestros pr√≥ximos pasos se centran en finalizar la fase actual y preparar el terreno para la siguiente etapa, tal como se defini√≥ en el cronograma."
    elif estado == "Con ligero retraso ‚ö†Ô∏è":
        linea_estado = f"Quer√≠a ofrecer una actualizaci√≥n transparente sobre {proyecto_nombre}. Hemos encontrado algunos desaf√≠os t√©cnicos menores que han causado un ligero retraso en una de las tareas secundarias."
        proximos_pasos = "El equipo ya ha implementado un plan de mitigaci√≥n y esperamos recuperar el tiempo perdido en los pr√≥ximos d√≠as. El impacto en la fecha final del proyecto es nulo en este momento."
    else: # Con riesgo üö®
        linea_estado = f"El motivo de esta comunicaci√≥n es informar de manera proactiva sobre un riesgo identificado en {proyecto_nombre} que requiere nuestra atenci√≥n."
        proximos_pasos = "Hemos detectado un posible bloqueo con un proveedor externo. Estamos trabajando en una soluci√≥n y explorando alternativas. Sugiero una breve reuni√≥n para discutir el plan de contingencia."

    email = f"""
    **Asunto:** Actualizaci√≥n de Estado - {proyecto_nombre.title()}

    **Estimado/a {audiencia},**

    Espero que te encuentres muy bien.

    {linea_estado}

    **Logros Recientes:**
    - [Completar con el logro principal de la semana]
    - [Completar con un logro secundario]

    **Pr√≥ximos Pasos:**
    {proximos_pasos}

    Agradezco de antemano tu continuo apoyo. No dudes en contactarme si tienes alguna consulta.

    Saludos cordiales,

    **[Tu Nombre]**
    Project Manager
    """
    return email


# --- Interfaz de Streamlit ---

st.set_page_config(page_title="Asistente IA para PMs", layout="wide")

# T√≠tulo y Sidebar
st.title("ü§ñ Asistente de IA para Project Managers")
st.markdown("_Un simulador para demostrar c√≥mo la IA potencia la gesti√≥n de proyectos._")

st.sidebar.header("Configuraci√≥n del Proyecto")
descripcion_proyecto = st.sidebar.text_area(
    "Describe tu proyecto aqu√≠:",
    "Lanzamiento de una nueva app m√≥vil para e-commerce en iOS y Android, con integraci√≥n a nuestro sistema de inventario actual. El objetivo es aumentar las ventas en un 15% en 6 meses.",
    height=150
)

herramienta_seleccionada = st.sidebar.selectbox(
    "Selecciona la herramienta de IA que quieres usar:",
    ["An√°lisis Predictivo de Riesgos", "Generador de WBS/EDT", "Asistente de Comunicaciones"]
)


# --- L√≥gica de la Interfaz Principal ---

if herramienta_seleccionada == "An√°lisis Predictivo de Riesgos":
    st.header("üîç An√°lisis Predictivo de Riesgos")
    st.markdown("La IA analiza la descripci√≥n de tu proyecto para identificar posibles riesgos en diferentes categor√≠as, permiti√©ndote ser m√°s proactivo.")
    
    if st.button("Analizar Riesgos Ahora"):
        with st.spinner('La IA est√° analizando miles de proyectos pasados para encontrar patrones...'):
            time.sleep(2) # Simula el procesamiento
            riesgos = simular_analisis_riesgos(descripcion_proyecto)
        
        st.subheader("Resultados del An√°lisis:")
        col1, col2, col3 = st.columns(3)
        with col1:
            st.warning("**Riesgos T√©cnicos**")
            for r in riesgos["riesgos_tecnicos"]:
                st.markdown(f"- {r}")
        with col2:
            st.warning("**Riesgos Operacionales**")
            for r in riesgos["riesgos_operacionales"]:
                st.markdown(f"- {r}")
        with col3:
            st.warning("**Riesgos Financieros**")
            for r in riesgos["riesgos_financieros"]:
                st.markdown(f"- {r}")

elif herramienta_seleccionada == "Generador de WBS/EDT":
    st.header("üèóÔ∏è Generador de WBS/EDT (Estructura de Desglose del Trabajo)")
    st.markdown("Ahorra horas de planificaci√≥n. La IA crea una estructura WBS/EDT inicial basada en proyectos similares, que luego puedes refinar.")

    if st.button("Generar WBS/EDT"):
        with st.spinner('La IA est√° estructurando las fases y entregables del proyecto...'):
            time.sleep(2)
            wbs = simular_generacion_wbs(descripcion_proyecto)

        st.subheader("Propuesta de WBS/EDT:")
        st.markdown(wbs)


elif herramienta_seleccionada == "Asistente de Comunicaciones":
    st.header("‚úâÔ∏è Asistente de Comunicaciones para Stakeholders")
    st.markdown("La IA te ayuda a redactar comunicaciones claras, profesionales y con el tono adecuado, liber√°ndote tiempo para la gesti√≥n estrat√©gica.")

    st.subheader("Configura tu comunicaci√≥n:")
    col1, col2 = st.columns(2)
    with col1:
        estado_actual = st.selectbox(
            "¬øCu√°l es el estado del proyecto?",
            ["A tiempo ‚úÖ", "Con ligero retraso ‚ö†Ô∏è", "Con riesgo üö®"]
        )
    with col2:
        audiencia = st.selectbox(
            "¬øA qui√©n va dirigido?",
            ["Comit√© Directivo", "Equipo T√©cnico", "Cliente Principal"]
        )
        
    if st.button("Redactar Borrador del Email"):
        with st.spinner('La IA est√° adaptando el tono y el mensaje...'):
            time.sleep(2)
            email = simular_asistente_comunicacion(descripcion_proyecto, estado_actual, audiencia)

        st.subheader("Borrador Sugerido por la IA:")
        st.markdown(email, unsafe_allow_html=True)

# --- FOOTER ---
st.markdown("---")
st.markdown(
    """
    <div style="text-align: center; color: grey;">
        <p>¬© 2025 | Creado por Wilton Torvisco</p>
    </div>
    """,
    unsafe_allow_html=True
)
